// Mocks generated by Mockito 5.4.5 from annotations
// in petadaptionapp/test/blocs/pet_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:petadaptionapp/models/pet_model.dart' as _i3;
import 'package:petadaptionapp/repositories/pet_repository.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [PetRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockPetRepository extends _i1.Mock implements _i2.PetRepository {
  MockPetRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i3.Pet> getPets() =>
      (super.noSuchMethod(
            Invocation.method(#getPets, []),
            returnValue: <_i3.Pet>[],
          )
          as List<_i3.Pet>);

  @override
  List<_i3.Pet> getAdoptedPets() =>
      (super.noSuchMethod(
            Invocation.method(#getAdoptedPets, []),
            returnValue: <_i3.Pet>[],
          )
          as List<_i3.Pet>);

  @override
  void adoptPet(String? petId, DateTime? adoptedDatetime) => super.noSuchMethod(
    Invocation.method(#adoptPet, [petId, adoptedDatetime]),
    returnValueForMissingStub: null,
  );

  @override
  _i4.Future<void> addPet(_i3.Pet? pet) =>
      (super.noSuchMethod(
            Invocation.method(#addPet, [pet]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> clearPets() =>
      (super.noSuchMethod(
            Invocation.method(#clearPets, []),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);
}
